{"ast":null,"code":"var _jsxFileName = \"/Users/taisei/Documents/card-battle-prototype/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_CARDS = [{\n  name: \"sword\",\n  label: \"剣\",\n  damage: 5\n}, {\n  name: \"dagger\",\n  label: \"小剣\",\n  damage: 2\n}, {\n  name: \"dagger\",\n  label: \"小剣\",\n  damage: 2\n}, {\n  name: \"spear\",\n  label: \"槍\",\n  damage: 4\n}, {\n  name: \"spear\",\n  label: \"槍\",\n  damage: 4\n}, {\n  name: \"heal\",\n  label: \"回復\",\n  heal: 1\n}, {\n  name: \"shield\",\n  label: \"盾\"\n}, {\n  name: \"shield\",\n  label: \"盾\"\n}];\nconst App = () => {\n  _s();\n  const [turn, setTurn] = useState(1);\n  const [playerHP, setPlayerHP] = useState(9);\n  const [aiHP, setAIHP] = useState(9);\n  const [playerCards, setPlayerCards] = useState(INITIAL_CARDS);\n  const [aiCards, setAICards] = useState([...INITIAL_CARDS]);\n  const [log, setLog] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [bombPlanted, setBombPlanted] = useState(false);\n  const [playerBombNext, setPlayerBombNext] = useState(null);\n  const [playerBombUsed, setPlayerBombUsed] = useState(false);\n  const [aiBombNext, setAIBombNext] = useState(null);\n  const [playerHealBlocked, setPlayerHealBlocked] = useState(false);\n  const [aiHealBlocked, setAIHealBlocked] = useState(false);\n  const [result, setResult] = useState(null);\n  const handleCardSelect = (card, index) => {\n    setSelectedCard({\n      ...card,\n      index\n    });\n  };\n  const handlePlay = () => {\n    if (playerHP <= 0 || aiHP <= 0) return;\n    if (!selectedCard) return;\n    const newPlayerCards = [...playerCards];\n    newPlayerCards.splice(selectedCard.index, 1);\n    setPlayerCards(newPlayerCards);\n    const aiChoiceIndex = Math.floor(Math.random() * aiCards.length);\n    const aiCard = aiCards[aiChoiceIndex];\n    const newAICards = [...aiCards];\n    newAICards.splice(aiChoiceIndex, 1);\n    setAICards(newAICards);\n\n    // 爆弾ダメージ処理（前ターン設置）\n    let pHP = playerHP;\n    let aHP = aiHP;\n    let roundLog = [];\n    if (playerBombNext && Math.random() > 0.1) {\n      aHP -= 4;\n      roundLog.push(`あなたの爆弾が起動！ 相手に4ダメージ`);\n    }\n    if (aiBombNext && Math.random() > 0.1) {\n      pHP -= 4;\n      roundLog.push(`相手の爆弾が起動！ あなたに4ダメージ`);\n    }\n\n    // メインカード処理（処理順に基づく）\n    const resolutionOrder = [\"spear\", \"dagger\", \"sword\", \"heal\"];\n    const both = [{\n      actor: \"あなた\",\n      card: selectedCard\n    }, {\n      actor: \"相手\",\n      card: aiCard\n    }].sort((a, b) => resolutionOrder.indexOf(a.card.name) - resolutionOrder.indexOf(b.card.name));\n    let newPlayerHealBlocked = false;\n    let newAIHealBlocked = false;\n    const playerCard = selectedCard;\n    const opponentCard = aiCard;\n    both.forEach(({\n      actor,\n      card\n    }) => {\n      if (card.name === \"spear\") {\n        if (actor === \"あなた\") {\n          if (opponentCard.name === \"shield\") {\n            roundLog.push(\"相手の盾があなたの攻撃を防いだ\");\n            return;\n          }\n          aHP -= 4;\n          newAIHealBlocked = true;\n          roundLog.push(\"あなたの槍が命中！ 相手に4ダメージ＋回復不能\");\n        } else {\n          if (playerCard.name === \"shield\") {\n            roundLog.push(\"あなたの盾が相手の攻撃を防いだ\");\n            return;\n          }\n          pHP -= 4;\n          newPlayerHealBlocked = true;\n          roundLog.push(\"相手の槍が命中！ あなたに4ダメージ＋回復不能\");\n        }\n      } else if (card.name === \"dagger\") {\n        if (actor === \"あなた\") {\n          if (opponentCard.name === \"shield\") {\n            roundLog.push(\"相手の盾があなたの攻撃を防いだ\");\n            return;\n          }\n          aHP -= 2;\n          roundLog.push(\"あなたの小剣が命中！ 相手に2ダメージ\");\n        } else {\n          if (playerCard.name === \"shield\") {\n            roundLog.push(\"あなたの盾が相手の攻撃を防いだ\");\n            return;\n          }\n          pHP -= 2;\n          roundLog.push(\"相手の小剣が命中！ あなたに2ダメージ\");\n        }\n      } else if (card.name === \"sword\") {\n        if (actor === \"あなた\") {\n          if (opponentCard.name === \"shield\") {\n            roundLog.push(\"相手の盾があなたの攻撃を防いだ\");\n            return;\n          }\n          aHP -= 5;\n          roundLog.push(\"あなたの剣が命中！ 相手に5ダメージ\");\n        } else {\n          if (playerCard.name === \"shield\") {\n            roundLog.push(\"あなたの盾が相手の攻撃を防いだ\");\n            return;\n          }\n          pHP -= 5;\n          roundLog.push(\"相手の剣が命中！ あなたに5ダメージ\");\n        }\n      } else if (card.name === \"heal\") {\n        if (actor === \"あなた\" && !playerHealBlocked) {\n          pHP = Math.min(9, pHP + 1);\n          roundLog.push(\"あなたが1回復した\");\n        } else if (actor === \"相手\" && !aiHealBlocked) {\n          aHP = Math.min(9, aHP + 1);\n          roundLog.push(\"相手が1回復した\");\n        }\n      }\n    });\n    if (roundLog.length === 0) {\n      roundLog.push(\"このターンでは何も起きなかった\");\n    }\n    if (pHP <= 0 && aHP <= 0) {\n      setResult(\"引き分け\");\n    } else if (pHP <= 0) {\n      setResult(\"あなたの敗北\");\n    } else if (aHP <= 0) {\n      setResult(\"あなたの勝利\");\n    }\n    setPlayerHP(Math.max(0, pHP));\n    setAIHP(Math.max(0, aHP));\n    setLog([...log, `--- Turn ${turn} ---`, ...roundLog]);\n    setTurn(turn + 1);\n    setSelectedCard(null);\n    setPlayerBombNext(bombPlanted && !playerBombUsed ? true : null);\n    if (bombPlanted && !playerBombUsed) {\n      setPlayerBombUsed(true);\n    }\n    setBombPlanted(false);\n    setAIBombNext(turn <= 3 && aiCard.name === \"bomb\" ? true : null);\n    setPlayerHealBlocked(newPlayerHealBlocked);\n    setAIHealBlocked(newAIHealBlocked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto text-center space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: \"\\u5FC3\\u7406\\u6226\\u30D0\\u30C8\\u30EB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u3042\\u306A\\u305F: HP \", playerHP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u76F8\\u624B: HP \", aiHP]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-xl font-bold text-red-600\",\n      children: [\"\\u30B2\\u30FC\\u30E0\\u7D42\\u4E86\\uFF1A\", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-2\",\n      children: playerCards.filter(card => card.name !== \"bomb\").map((card, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleCardSelect(card, idx),\n        className: \"border p-2 rounded bg-white text-sm\",\n        disabled: result,\n        children: card.label\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), turn <= 3 && !playerBombUsed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block text-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"inline-flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: bombPlanted,\n          onChange: e => setBombPlanted(e.target.checked),\n          className: \"mr-2\",\n          disabled: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), \"\\u7206\\u5F3E\\u3092\\u4F0F\\u305B\\u308B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-gray-600 ml-6\",\n        children: \"\\u203B \\u7206\\u5F3E\\u306F\\u6700\\u59271\\u56DE\\u3001\\u30BF\\u30FC\\u30F33\\u307E\\u3067\\u306B\\u4F0F\\u305B\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 text-white px-4 py-2 rounded disabled:opacity-50\",\n      onClick: handlePlay,\n      disabled: !selectedCard || result,\n      children: \"\\u30AB\\u30FC\\u30C9\\u3092\\u51FA\\u3059\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-left text-xs bg-gray-100 p-2 rounded h-48 overflow-y-scroll\",\n      children: log.map((line, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: line\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"x9COhtg8mlQwPHDv4QKUA0o6eD8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","INITIAL_CARDS","name","label","damage","heal","App","_s","turn","setTurn","playerHP","setPlayerHP","aiHP","setAIHP","playerCards","setPlayerCards","aiCards","setAICards","log","setLog","selectedCard","setSelectedCard","bombPlanted","setBombPlanted","playerBombNext","setPlayerBombNext","playerBombUsed","setPlayerBombUsed","aiBombNext","setAIBombNext","playerHealBlocked","setPlayerHealBlocked","aiHealBlocked","setAIHealBlocked","result","setResult","handleCardSelect","card","index","handlePlay","newPlayerCards","splice","aiChoiceIndex","Math","floor","random","length","aiCard","newAICards","pHP","aHP","roundLog","push","resolutionOrder","both","actor","sort","a","b","indexOf","newPlayerHealBlocked","newAIHealBlocked","playerCard","opponentCard","forEach","min","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","map","idx","onClick","disabled","type","checked","onChange","e","target","line","i","_c","$RefreshReg$"],"sources":["/Users/taisei/Documents/card-battle-prototype/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst INITIAL_CARDS = [\n  { name: \"sword\", label: \"剣\", damage: 5 },\n  { name: \"dagger\", label: \"小剣\", damage: 2 },\n  { name: \"dagger\", label: \"小剣\", damage: 2 },\n  { name: \"spear\", label: \"槍\", damage: 4 },\n  { name: \"spear\", label: \"槍\", damage: 4 },\n  { name: \"heal\", label: \"回復\", heal: 1 },\n  { name: \"shield\", label: \"盾\" },\n  { name: \"shield\", label: \"盾\" },\n];\n\nconst App = () => {\n  const [turn, setTurn] = useState(1);\n  const [playerHP, setPlayerHP] = useState(9);\n  const [aiHP, setAIHP] = useState(9);\n  const [playerCards, setPlayerCards] = useState(INITIAL_CARDS);\n  const [aiCards, setAICards] = useState([...INITIAL_CARDS]);\n  const [log, setLog] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [bombPlanted, setBombPlanted] = useState(false);\n  const [playerBombNext, setPlayerBombNext] = useState(null);\n  const [playerBombUsed, setPlayerBombUsed] = useState(false);\n  const [aiBombNext, setAIBombNext] = useState(null);\n  const [playerHealBlocked, setPlayerHealBlocked] = useState(false);\n  const [aiHealBlocked, setAIHealBlocked] = useState(false);\n  const [result, setResult] = useState(null);\n\n  const handleCardSelect = (card, index) => {\n    setSelectedCard({ ...card, index });\n  };\n\n  const handlePlay = () => {\n    if (playerHP <= 0 || aiHP <= 0) return;\n    if (!selectedCard) return;\n    const newPlayerCards = [...playerCards];\n    newPlayerCards.splice(selectedCard.index, 1);\n    setPlayerCards(newPlayerCards);\n\n    const aiChoiceIndex = Math.floor(Math.random() * aiCards.length);\n    const aiCard = aiCards[aiChoiceIndex];\n    const newAICards = [...aiCards];\n    newAICards.splice(aiChoiceIndex, 1);\n    setAICards(newAICards);\n\n    // 爆弾ダメージ処理（前ターン設置）\n    let pHP = playerHP;\n    let aHP = aiHP;\n    let roundLog = [];\n\n    if (playerBombNext && Math.random() > 0.1) {\n      aHP -= 4;\n      roundLog.push(`あなたの爆弾が起動！ 相手に4ダメージ`);\n    }\n    if (aiBombNext && Math.random() > 0.1) {\n      pHP -= 4;\n      roundLog.push(`相手の爆弾が起動！ あなたに4ダメージ`);\n    }\n\n    // メインカード処理（処理順に基づく）\n    const resolutionOrder = [\"spear\", \"dagger\", \"sword\", \"heal\"];\n    const both = [\n      { actor: \"あなた\", card: selectedCard },\n      { actor: \"相手\", card: aiCard },\n    ].sort(\n      (a, b) => resolutionOrder.indexOf(a.card.name) - resolutionOrder.indexOf(b.card.name)\n    );\n\n    let newPlayerHealBlocked = false;\n    let newAIHealBlocked = false;\n\n    const playerCard = selectedCard;\n    const opponentCard = aiCard;\n\n    both.forEach(({ actor, card }) => {\n      if (card.name === \"spear\") {\n        if (actor === \"あなた\") {\n          if (opponentCard.name === \"shield\") {\n            roundLog.push(\"相手の盾があなたの攻撃を防いだ\");\n            return;\n          }\n          aHP -= 4;\n          newAIHealBlocked = true;\n          roundLog.push(\"あなたの槍が命中！ 相手に4ダメージ＋回復不能\");\n        } else {\n          if (playerCard.name === \"shield\") {\n            roundLog.push(\"あなたの盾が相手の攻撃を防いだ\");\n            return;\n          }\n          pHP -= 4;\n          newPlayerHealBlocked = true;\n          roundLog.push(\"相手の槍が命中！ あなたに4ダメージ＋回復不能\");\n        }\n      } else if (card.name === \"dagger\") {\n        if (actor === \"あなた\") {\n          if (opponentCard.name === \"shield\") {\n            roundLog.push(\"相手の盾があなたの攻撃を防いだ\");\n            return;\n          }\n          aHP -= 2;\n          roundLog.push(\"あなたの小剣が命中！ 相手に2ダメージ\");\n        } else {\n          if (playerCard.name === \"shield\") {\n            roundLog.push(\"あなたの盾が相手の攻撃を防いだ\");\n            return;\n          }\n          pHP -= 2;\n          roundLog.push(\"相手の小剣が命中！ あなたに2ダメージ\");\n        }\n      } else if (card.name === \"sword\") {\n        if (actor === \"あなた\") {\n          if (opponentCard.name === \"shield\") {\n            roundLog.push(\"相手の盾があなたの攻撃を防いだ\");\n            return;\n          }\n          aHP -= 5;\n          roundLog.push(\"あなたの剣が命中！ 相手に5ダメージ\");\n        } else {\n          if (playerCard.name === \"shield\") {\n            roundLog.push(\"あなたの盾が相手の攻撃を防いだ\");\n            return;\n          }\n          pHP -= 5;\n          roundLog.push(\"相手の剣が命中！ あなたに5ダメージ\");\n        }\n      } else if (card.name === \"heal\") {\n        if (actor === \"あなた\" && !playerHealBlocked) {\n          pHP = Math.min(9, pHP + 1);\n          roundLog.push(\"あなたが1回復した\");\n        } else if (actor === \"相手\" && !aiHealBlocked) {\n          aHP = Math.min(9, aHP + 1);\n          roundLog.push(\"相手が1回復した\");\n        }\n      }\n    });\n\n    if (roundLog.length === 0) {\n      roundLog.push(\"このターンでは何も起きなかった\");\n    }\n\n    if (pHP <= 0 && aHP <= 0) {\n      setResult(\"引き分け\");\n    } else if (pHP <= 0) {\n      setResult(\"あなたの敗北\");\n    } else if (aHP <= 0) {\n      setResult(\"あなたの勝利\");\n    }\n\n    setPlayerHP(Math.max(0, pHP));\n    setAIHP(Math.max(0, aHP));\n    setLog([...log, `--- Turn ${turn} ---`, ...roundLog]);\n    setTurn(turn + 1);\n    setSelectedCard(null);\n\n    setPlayerBombNext(bombPlanted && !playerBombUsed ? true : null);\n    if (bombPlanted && !playerBombUsed) {\n      setPlayerBombUsed(true);\n    }\n    setBombPlanted(false);\n    setAIBombNext(turn <= 3 && aiCard.name === \"bomb\" ? true : null);\n    setPlayerHealBlocked(newPlayerHealBlocked);\n    setAIHealBlocked(newAIHealBlocked);\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto text-center space-y-4\">\n      <h1 className=\"text-xl font-bold\">心理戦バトル</h1>\n      <div className=\"flex justify-between\">\n        <span>あなた: HP {playerHP}</span>\n        <span>相手: HP {aiHP}</span>\n      </div>\n      {result && (\n        <div className=\"text-center text-xl font-bold text-red-600\">\n          ゲーム終了：{result}\n        </div>\n      )}\n      <div className=\"grid grid-cols-3 gap-2\">\n        {playerCards\n          .filter(card => card.name !== \"bomb\")\n          .map((card, idx) => (\n            <button\n              key={idx}\n              onClick={() => handleCardSelect(card, idx)}\n              className=\"border p-2 rounded bg-white text-sm\"\n              disabled={result}\n            >\n              {card.label}\n            </button>\n          ))}\n      </div>\n      {turn <= 3 && !playerBombUsed && (\n        <div className=\"block text-left\">\n          <label className=\"inline-flex items-center\">\n            <input\n              type=\"checkbox\"\n              checked={bombPlanted}\n              onChange={(e) => setBombPlanted(e.target.checked)}\n              className=\"mr-2\"\n              disabled={result}\n            />\n            爆弾を伏せる\n          </label>\n          <small className=\"text-gray-600 ml-6\">\n            ※ 爆弾は最大1回、ターン3までに伏せることができます\n          </small>\n        </div>\n      )}\n      <button\n        className=\"bg-blue-500 text-white px-4 py-2 rounded disabled:opacity-50\"\n        onClick={handlePlay}\n        disabled={!selectedCard || result}\n      >\n        カードを出す\n      </button>\n      <div className=\"text-left text-xs bg-gray-100 p-2 rounded h-48 overflow-y-scroll\">\n        {log.map((line, i) => (\n          <div key={i}>{line}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}